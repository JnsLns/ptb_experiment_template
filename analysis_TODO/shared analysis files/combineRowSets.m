
% combines rowSets of different IV levels as defined in ivs column
% a.s.ivsCols.joinVals and then removes from ivs and rowSets the IV levels
% that were only activated temporarily to enable them to be joined.

if ~a.s.combineLevelsByMeanOfMeansNotGrandMean
    
    joinValCodeBase = 909090; % basis for coding values used for sets of joined
    % values (defined in a.s.ivsCols.joinVals). The actual
    % values are generated by increasing this number in
    % steps of 1 and are entered into a.s.ivsCols.values.
    % They can be used to define differences between
    % joined values in a.s.ivsCols.diffs. joinValCodeBase
    % should be chosen such that the resulting new code
    % values do not conflict with any already existing
    % ones.
    
    
    for curIv = 1:size(a.s.ivs,1)
        
        joinValCodeCounter = joinValCodeBase;
        
        % loop over sets of values to be joined
        for curJoinSet = 1:numel(a.s.ivs{curIv,a.s.ivsCols.joinVals})
            
            disp('Joining trial sets...');
            
            % set of code values (referring to a.s.ivsCols.values) that are joined
            joinSet = a.s.ivs{curIv,a.s.ivsCols.joinVals}{curJoinSet};
            
            % identify pages of a.s.rowSets that are to be combined
            joinPages = find(arrayfun(@(x) any(x==joinSet), a.s.ivs{curIv,a.s.ivsCols.values}));
            
            % combine these pages (dimension of a.s.rowSets is equal to curIv)
            % and add result as additional last page to a.s.rowSets.
            a.s.rowSets = cellLogicalOr(a.s.rowSets, curIv, joinPages, 1);
            
            % add data about new page in a.s.rowSets to a.s.ivs
            joinValCodeCounter = joinValCodeCounter + 1;
            a.s.ivs{curIv,a.s.ivsCols.valLabels}{end+1} = strjoin(a.s.ivs{curIv,a.s.ivsCols.valLabels}(joinPages),'&');
            a.s.ivs{curIv,a.s.ivsCols.values}(end+1) = joinValCodeCounter;
            
        end
        
    end
    
    
    % remove data from a.s.rowSets array that was inserted temporarily only for the
    % purpose of computing joined sets in combineRowSets.m (and which themselves should not be plotted).
    for curIv = 1:size(a.s.ivs,1)
        
        % Find set of values temporarily activated due to joining (and not due
        % to diffs, which are used later and only then removed).
        curTmpVals = intersect(a.s.ivs{curIv,a.s.ivsCols.tmpValsJoin},a.s.ivs{curIv,a.s.ivsCols.tmpValsDiff});
        curTmpVals = a.s.ivs{curIv,a.s.ivsCols.tmpValsJoin}(~(arrayfun(@(x) any(x==curTmpVals), a.s.ivs{curIv,a.s.ivsCols.tmpValsJoin})));
        
        while ~isempty(curTmpVals)
            
            curTmpVal = curTmpVals(1);
            
            % Find number of page that needs to be removed from the dimension
            % given by curIv to get rid of current temp value data
            pageNum = find(a.s.ivs{curIv,a.s.ivsCols.values} == curTmpVal);
            
            % delete that page from a.s.rowSets
            a.s.rowSets = cellPageDelete(a.s.rowSets,curIv,pageNum);
            
            % remove current temp val from storage and from values and delete
            % corresponding label from a.s.ivs
            curTmpVals(1) = [];
            a.s.ivs{curIv,a.s.ivsCols.values}(pageNum) = [];
            a.s.ivs{curIv,a.s.ivsCols.valLabels}(pageNum) = [];
            
        end
        
    end
    
    clearvars -except a e tg aTmp
    
end