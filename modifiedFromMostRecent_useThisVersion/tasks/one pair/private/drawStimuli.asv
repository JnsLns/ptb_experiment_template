

% abbreviations for columns in triallist (used in the following)
vps = tg.triallistCols.vertPosStart;  % positions
vpe = tg.triallistCols.vertPosEnd;
hps = tg.triallistCols.horzPosStart;
hpe = tg.triallistCols.horzPosEnd;
ves = tg.triallistCols.vertExtStart;  % extent
vee = tg.triallistCols.vertExtEnd;
hes = tg.triallistCols.horzExtStart;
hee = tg.triallistCols.horzExtEnd;
sids = tg.triallistCols.stimIdentitiesStart;        
side = tg.triallistCols.stimIdentitiesEnd;        
scs  = tg.triallistCols.stimColorsEnd;        
sce  = tg.triallistCols.stimColorsEnd;        

% triallist row for current trial
ct = e.trials(curTrial,:);

% item positions in psychtoolbox coordinates / pixels
[x_pos, y_pos] = paVaToPtbPx(ct(hps:hpe), ct(vps:vpe), spatialConfig);

% item extent in pixels
x_ext = vaToPx(ct(hes:hee), spatialConfig);
y_ext = vaToPx(ct(ves:vee), spatialConfig);

% letter identities & colors
shapeCodes = ct(sids:side);
colorCodes = ct(scs:sce);

% Draw items
for i = 1:hpe-hps+1

    % skip nan entries in shapeCodes (i.e., stimIdentities)
    if ~isnan(shapeCodes(i))
        
        % straight-line letters (non-targets)
        if shapeCodes(i) ~= 0  
    
            lineItem(winsOff.stims.h, ...
                     [x_ext(i) y_ext(i)], ...      
                     [3 3], ...
                     e.s.stimShapes{shapeCodes(i)}, ...
                     e.s, ...
                     e.s.stimColors{colorCodes(i)}, ...
                     [x_pos(i), y_pos(i)]);
        
        % letter O (target)
        else                         
            
            Screen('FrameOval', ...
                   winsOff.stims.h, ...
                   e.s.stimColors{colorCodes(i)}, ...
                   [x_pos(i) - x_ext(i)/2, ...
                    y_pos(i) - y_ext(i)/2, ...
                    x_pos(i) + x_ext(i)/2, ...
                    y_pos(i) + y_ext(i)/2], ...
                    lineWidth, ...
                    lineWidth);
            
        end
        
    end
    
end








